// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormattedMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo.bar.baz\\",
      defaultMessage: \\"Hello World!\\"
    });
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message.",
        "id": "foo.bar.baz",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`GH #2663 1`] = `
Object {
  "code": "\\"use strict\\";

function _typeof(obj) { \\"@babel/helpers - typeof\\"; return _typeof = \\"function\\" == typeof Symbol && \\"symbol\\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \\"function\\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { \\"use strict\\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \\"function\\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \\"@@iterator\\", asyncIteratorSymbol = $Symbol.asyncIterator || \\"@@asyncIterator\\", toStringTagSymbol = $Symbol.toStringTag || \\"@@toStringTag\\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \\"\\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \\"suspendedStart\\"; return function (method, arg) { if (\\"executing\\" === state) throw new Error(\\"Generator is already running\\"); if (\\"completed\\" === state) { if (\\"throw\\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\\"next\\" === context.method) context.sent = context._sent = context.arg;else if (\\"throw\\" === context.method) { if (\\"suspendedStart\\" === state) throw state = \\"completed\\", context.arg; context.dispatchException(context.arg); } else \\"return\\" === context.method && context.abrupt(\\"return\\", context.arg); state = \\"executing\\"; var record = tryCatch(innerFn, self, context); if (\\"normal\\" === record.type) { if (state = context.done ? \\"completed\\" : \\"suspendedYield\\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \\"throw\\" === record.type && (state = \\"completed\\", context.method = \\"throw\\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \\"normal\\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \\"throw\\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\\"next\\", \\"throw\\", \\"return\\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\\"throw\\" !== record.type) { var result = record.arg, value = result.value; return value && \\"object\\" == _typeof(value) && hasOwn.call(value, \\"__await\\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\\"next\\", value, resolve, reject); }, function (err) { invoke(\\"throw\\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\\"throw\\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \\"throw\\" === context.method) { if (delegate.iterator[\\"return\\"] && (context.method = \\"return\\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \\"throw\\" === context.method)) return ContinueSentinel; context.method = \\"throw\\", context.arg = new TypeError(\\"The iterator does not provide a 'throw' method\\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\\"throw\\" === record.type) return context.method = \\"throw\\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \\"return\\" !== context.method && (context.method = \\"next\\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \\"throw\\", context.arg = new TypeError(\\"iterator result is not an object\\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \\"normal\\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \\"root\\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\\"function\\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \\"constructor\\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \\"constructor\\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \\"GeneratorFunction\\"), exports.isGeneratorFunction = function (genFun) { var ctor = \\"function\\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \\"GeneratorFunction\\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \\"GeneratorFunction\\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \\"Generator\\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \\"toString\\", function () { return \\"[object Generator]\\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \\"next\\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \\"t\\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\\"throw\\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \\"throw\\", record.arg = exception, context.next = loc, caught && (context.method = \\"next\\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\\"root\\" === entry.tryLoc) return handle(\\"end\\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \\"catchLoc\\"), hasFinally = hasOwn.call(entry, \\"finallyLoc\\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\\"try statement without catch or finally\\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \\"finallyLoc\\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\\"break\\" === type || \\"continue\\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \\"next\\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\\"throw\\" === record.type) throw record.arg; return \\"break\\" === record.type || \\"continue\\" === record.type ? this.next = record.arg : \\"return\\" === record.type ? (this.rval = this.arg = record.arg, this.method = \\"return\\", this.next = \\"end\\") : \\"normal\\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \\"catch\\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\\"throw\\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\\"illegal catch attempt\\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \\"next\\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"next\\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"throw\\", err); } _next(undefined); }); }; }

function error1() {
  return _error.apply(this, arguments);
}

function _error() {
  _error = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return intl.formatMessage({
              id: \\"dI+HS6\\",
              defaultMessage: \\"foo\\"
            });

          case 2:
          case \\"end\\":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _error.apply(this, arguments);
}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "foo",
        "description": "foo",
        "id": "dI+HS6",
      },
      Object {
        "defaultMessage": "foo",
        "description": undefined,
        "id": "dI+HS6",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`additionalComponentNames 1`] = `
Object {
  "code": "import React, { Component } from 'react';

function CustomMessage() {}

export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(CustomMessage, {
      id: \\"greeting-world\\",
      defaultMessage: \\"Hello World!\\"
    });
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "Greeting to the world",
        "id": "greeting-world",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`additionalFunctionNames 1`] = `
Object {
  "code": "// @react-intl project:foo
import React, { Component } from 'react';

function CustomMessage() {}

export default class Foo extends Component {
  render() {
    t({
      id: \\"mfl9RV\\",
      defaultMessage: \\"t\\"
    });
    return /*#__PURE__*/React.createElement(CustomMessage, {
      id: formatMessage({
        id: \\"9/u6bg\\",
        defaultMessage: \\"foo\\"
      }),
      description: $formatMessage({
        id: \\"3jMyCE\\",
        defaultMessage: \\"foo2\\"
      }),
      defaultMessage: \\"Hello World!\\"
    });
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "t",
        "description": undefined,
        "id": "mfl9RV",
      },
      Object {
        "defaultMessage": "foo",
        "description": undefined,
        "id": "9/u6bg",
      },
      Object {
        "defaultMessage": "foo2",
        "description": undefined,
        "id": "3jMyCE",
      },
    ],
    "meta": Object {
      "project": "foo",
    },
  },
}
`;

exports[`ast 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage, defineMessages } from 'react-intl';
defineMessage({
  id: \\"defineMessage\\",
  defaultMessage: [{
    \\"type\\": 0,
    \\"value\\": \\"this is a \\"
  }, {
    \\"type\\": 3,
    \\"value\\": \\"dt\\",
    \\"style\\": \\"full\\"
  }]
});
defineMessages({
  foo: {
    id: \\"defineMessages1\\",
    defaultMessage: [{
      \\"type\\": 0,
      \\"value\\": \\"this is a \\"
    }, {
      \\"type\\": 4,
      \\"value\\": \\"dt\\",
      \\"style\\": \\"full\\"
    }]
  },
  bar: {
    id: \\"defineMessages2\\",
    defaultMessage: [{
      \\"type\\": 0,
      \\"value\\": \\"this is a \\"
    }, {
      \\"type\\": 2,
      \\"value\\": \\"dt\\",
      \\"style\\": null
    }]
  },
  baz: {
    id: 'compiled',
    defaultMessage: [{
      type: 0,
      value: 'asd'
    }]
  }
});
export default class Foo extends Component {
  render() {
    Intl.formatMessage({
      id: \\"intl.formatMessage\\",
      defaultMessage: [{
        \\"type\\": 0,
        \\"value\\": \\"foo \\"
      }, {
        \\"type\\": 6,
        \\"value\\": \\"s\\",
        \\"options\\": {
          \\"one\\": {
            \\"value\\": [{
              \\"type\\": 0,
              \\"value\\": \\"1\\"
            }]
          },
          \\"other\\": {
            \\"value\\": [{
              \\"type\\": 0,
              \\"value\\": \\"2\\"
            }]
          }
        },
        \\"offset\\": 0,
        \\"pluralType\\": \\"cardinal\\"
      }]
    });
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo.bar.baz\\",
      defaultMessage: [{
        \\"type\\": 0,
        \\"value\\": \\"Hello World!\\"
      }]
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"compiled2\\",
      defaultMessage: [{
        type: 0,
        value: 'compiled comp'
      }]
    }));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "this is a {dt, date, full}",
        "description": undefined,
        "id": "defineMessage",
      },
      Object {
        "defaultMessage": "this is a {dt, time, full}",
        "description": undefined,
        "id": "defineMessages1",
      },
      Object {
        "defaultMessage": "this is a {dt, number}",
        "description": undefined,
        "id": "defineMessages2",
      },
      Object {
        "defaultMessage": "foo {s, plural, one{1} other{2}}",
        "description": undefined,
        "id": "intl.formatMessage",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message.",
        "id": "foo.bar.baz",
      },
      Object {
        "defaultMessage": undefined,
        "description": "The default message.",
        "id": "compiled2",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`defineMessage 1`] = `
Object {
  "code": "// @react-intl project:amazing
import React, { Component } from 'react';
import { defineMessage, FormattedMessage } from 'react-intl';
var msgs = {
  header: defineMessage({
    id: \\"foo.bar.baz\\",
    defaultMessage: \\"Hello World!\\"
  }),
  content: defineMessage({
    id: \\"foo.bar.biff\\",
    defaultMessage: \\"Hello Nurse!\\"
  }),
  kittens: defineMessage({
    id: \\"app.home.kittens\\",
    defaultMessage: \\"{count, plural, =0 {\\\\uD83D\\\\uDE2D} one {# kitten} other {# kittens}}\\"
  }),
  trailingWhitespace: defineMessage({
    id: \\"trailing.ws\\",
    defaultMessage: \\"Some whitespace\\"
  }),
  escaped: defineMessage({
    id: \\"escaped.apostrophe\\",
    defaultMessage: \\"A quoted value ''{value}'\\"
  }),
  stringKeys: defineMessage({
    // prettier-ignore
    'id': \\"string.key.id\\",
    // prettier-ignore
    'defaultMessage': \\"This is message\\"
  })
};
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.header)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.content)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.kittens)));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "foo.bar.baz",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": "Another message",
        "id": "foo.bar.biff",
      },
      Object {
        "defaultMessage": "{count, plural, =0 {😭} one {# kitten} other {# kittens}}",
        "description": "Counts kittens",
        "id": "app.home.kittens",
      },
      Object {
        "defaultMessage": "Some whitespace",
        "description": "Whitespace",
        "id": "trailing.ws",
      },
      Object {
        "defaultMessage": "A quoted value ''{value}'",
        "description": "Escaped apostrophe",
        "id": "escaped.apostrophe",
      },
      Object {
        "defaultMessage": "This is message",
        "description": "Keys as a string literal",
        "id": "string.key.id",
      },
    ],
    "meta": Object {
      "project": "amazing",
    },
  },
}
`;

exports[`defineMessages 1`] = `
Object {
  "code": "// @react-intl project:amazing
import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
var msgs = defineMessages({
  header: {
    id: \\"foo.bar.baz\\",
    defaultMessage: \\"Hello World!\\"
  },
  content: {
    id: \\"foo.bar.biff\\",
    defaultMessage: \\"Hello Nurse!\\"
  },
  kittens: {
    id: \\"app.home.kittens\\",
    defaultMessage: \\"{count, plural, =0 {\\\\uD83D\\\\uDE2D} one {# kitten} other {# kittens}}\\"
  },
  trailingWhitespace: {
    id: \\"trailing.ws\\",
    defaultMessage: \\"Some whitespace\\"
  },
  escaped: {
    id: \\"escaped.apostrophe\\",
    defaultMessage: \\"A quoted value ''{value}'\\"
  }
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.header)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.content)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.kittens)));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "foo.bar.baz",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": "Another message",
        "id": "foo.bar.biff",
      },
      Object {
        "defaultMessage": "{count, plural, =0 {😭} one {# kitten} other {# kittens}}",
        "description": "Counts kittens",
        "id": "app.home.kittens",
      },
      Object {
        "defaultMessage": "Some whitespace",
        "description": "Whitespace",
        "id": "trailing.ws",
      },
      Object {
        "defaultMessage": "A quoted value ''{value}'",
        "description": "Escaped apostrophe",
        "id": "escaped.apostrophe",
      },
    ],
    "meta": Object {
      "project": "amazing",
    },
  },
}
`;

exports[`descriptionsAsObjects 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl'; // @react-intl project:amazing2

export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo.bar.baz\\",
      defaultMessage: \\"Hello World!\\"
    });
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": Object {
          "metadata": "Additional metadata content.",
          "text": "Something for the translator.",
        },
        "id": "foo.bar.baz",
      },
    ],
    "meta": Object {
      "project": "amazing2",
    },
  },
}
`;

exports[`empty 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessage } from 'react-intl';
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null);
  }

}",
  "data": Object {
    "messages": Array [],
    "meta": Object {},
  },
}
`;

exports[`extractFromFormatMessageCall 1`] = `
Object {
  "code": "import { FormattedMessage, injectIntl } from 'react-intl';
import React, { Component } from 'react';
var objectPointer = {
  id: 'foo.bar.invalid',
  defaultMessage: 'This cannot be extracted',
  description: 'the plugin only supports inline objects'
};

class Foo extends Component {
  render() {
    var {
      intl
    } = this.props;
    var {
      intl: {
        formatMessage
      }
    } = this.props;
    var msgs = {
      baz: this.props.intl.formatMessage({
        id: \\"foo.bar.baz\\",
        defaultMessage: \\"Hello World!\\"
      }),
      biff: intl.formatMessage({
        id: \\"foo.bar.biff\\",
        defaultMessage: \\"Hello Nurse!\\"
      }),
      qux: formatMessage({
        id: \\"foo.bar.qux\\",
        defaultMessage: \\"Hello Stranger!\\"
      }),
      invalid: this.props.intl.formatMessage(objectPointer)
    };
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, msgs.header), /*#__PURE__*/React.createElement(\\"p\\", null, msgs.content), /*#__PURE__*/React.createElement(\\"span\\", null, /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo\\",
      defaultMessage: \\"bar\\"
    })));
  }

}

export default injectIntl(Foo);",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "foo.bar.baz",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": "Another message",
        "id": "foo.bar.biff",
      },
      Object {
        "defaultMessage": "Hello Stranger!",
        "description": "A different message",
        "id": "foo.bar.qux",
      },
      Object {
        "defaultMessage": "bar",
        "description": "baz",
        "id": "foo",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`extractFromFormatMessageCallStateless 1`] = `
Object {
  "code": "import { FormattedMessage, injectIntl, useIntl } from 'react-intl';
import React from 'react';

function myFunction(param1, _ref) {
  var {
    formatMessage,
    formatDate
  } = _ref;
  return formatMessage({
    id: \\"inline1\\",
    defaultMessage: \\"Hello params!\\"
  }) + formatDate(new Date());
}

var child = myFunction(filterable, intl);

function SFC() {
  var {
    formatMessage
  } = useIntl();
  return formatMessage({
    id: \\"hook\\",
    defaultMessage: \\"hook <b>foo</b>\\"
  });
}

var Foo = _ref2 => {
  var {
    intl: {
      formatMessage
    }
  } = _ref2;
  var msgs = {
    qux: formatMessage({
      id: \\"foo.bar.quux\\",
      defaultMessage: \\"Hello <b>Stateless!</b>\\"
    })
  };
  return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, msgs.header), /*#__PURE__*/React.createElement(\\"p\\", null, msgs.content), /*#__PURE__*/React.createElement(\\"span\\", null, /*#__PURE__*/React.createElement(FormattedMessage, {
    id: \\"foo\\",
    defaultMessage: \\"bar\\"
  })));
};

export default injectIntl(Foo);",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello params!",
        "description": "A stateless message",
        "id": "inline1",
      },
      Object {
        "defaultMessage": "hook <b>foo</b>",
        "description": "hook",
        "id": "hook",
      },
      Object {
        "defaultMessage": "Hello <b>Stateless!</b>",
        "description": "A stateless message",
        "id": "foo.bar.quux",
      },
      Object {
        "defaultMessage": "bar",
        "description": "baz",
        "id": "foo",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`extractSourceLocation 1`] = `
"import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo.bar.baz\\",
      defaultMessage: \\"Hello World!\\"
    });
  }

}"
`;

exports[`extractSourceLocation 2`] = `
Array [
  Object {
    "defaultMessage": "Hello World!",
    "description": undefined,
    "end": Position {
      "column": 78,
      "index": 220,
      "line": 6,
    },
    "file": Any<String>,
    "filename": undefined,
    "id": "foo.bar.baz",
    "identifierName": undefined,
    "start": Position {
      "column": 11,
      "index": 153,
      "line": 6,
    },
  },
]
`;

exports[`extractSourceLocation 3`] = `Object {}`;

exports[`formatMessageCall 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { injectIntl, FormattedMessage } from 'react-intl';
var objectPointer = {
  id: 'foo.bar.invalid',
  defaultMessage: 'This cannot be extracted',
  description: 'the plugin only supports inline objects'
};

class Foo extends Component {
  render() {
    var msgs = {
      baz: this.props.intl.formatMessage({
        id: \\"foo.bar.baz\\",
        defaultMessage: \\"Hello World!\\"
      }),
      biff: this.props.intl.formatMessage({
        id: \\"foo.bar.biff\\",
        defaultMessage: \\"Hello Nurse!\\"
      }),
      invalid: this.props.intl.formatMessage(objectPointer)
    };
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, msgs.header), /*#__PURE__*/React.createElement(\\"p\\", null, msgs.content), /*#__PURE__*/React.createElement(\\"span\\", null, /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo\\",
      defaultMessage: \\"bar\\"
    })));
  }

}

export default injectIntl(Foo);",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "foo.bar.baz",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": "Another message",
        "id": "foo.bar.biff",
      },
      Object {
        "defaultMessage": "bar",
        "description": "baz",
        "id": "foo",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`idInterpolationPattern 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
var msgs = defineMessages({
  header: {
    id: \\"fixtures.idInterpolationPattern.4d1460\\",
    defaultMessage: \\"Hello World!\\"
  },
  content: {
    id: \\"foo.bar.biff\\",
    defaultMessage: \\"Hello Nurse!\\"
  }
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.header)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.content)), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"fixtures.idInterpolationPattern.36a8c8\\",
      defaultMessage: \\"Hello World!\\"
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"fixtures.idInterpolationPattern.5ce864\\",
      defaultMessage: \\"NO ID\\"
    }));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "fixtures.idInterpolationPattern.4d1460",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": Object {
          "metadata": "Additional metadata content.",
          "text": "Something for the translator.",
        },
        "id": "foo.bar.biff",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "Something for the translator. Another description",
        "id": "fixtures.idInterpolationPattern.36a8c8",
      },
      Object {
        "defaultMessage": "NO ID",
        "description": "Something for the translator. Another description",
        "id": "fixtures.idInterpolationPattern.5ce864",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`idInterpolationPattern default 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
var msgs = defineMessages({
  header: {
    id: \\"TRRgnX\\",
    defaultMessage: \\"Hello World!\\"
  },
  content: {
    id: \\"foo.bar.biff\\",
    defaultMessage: \\"Hello Nurse!\\"
  }
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.header)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.content)), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"NqjIBK\\",
      defaultMessage: \\"Hello World!\\"
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"XOhkQy\\",
      defaultMessage: \\"NO ID\\"
    }));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "TRRgnX",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": Object {
          "metadata": "Additional metadata content.",
          "text": "Something for the translator.",
        },
        "id": "foo.bar.biff",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "Something for the translator. Another description",
        "id": "NqjIBK",
      },
      Object {
        "defaultMessage": "NO ID",
        "description": "Something for the translator. Another description",
        "id": "XOhkQy",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`inline 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage } from 'react-intl';
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo.bar.baz\\",
      defaultMessage: \\"Hello World!\\"
    }), defineMessage({
      id: \\"header\\",
      defaultMessage: \\"Hello World!\\"
    }), defineMessage({
      id: \\"header2\\",
      defaultMessage: \\"Hello World!\\"
    }));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message.",
        "id": "foo.bar.baz",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "header",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "header2",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`overrideIdFn 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
var msgs = defineMessages({
  header: {
    id: \\"overrideIdFn.js.foo.bar.baz.12.string\\",
    defaultMessage: \\"Hello World!\\"
  },
  content: {
    id: \\"overrideIdFn.js.foo.bar.biff.12.object\\",
    defaultMessage: \\"Hello Nurse!\\"
  }
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.header)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.content)), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"overrideIdFn.js.foo.bar.zoo.12.object\\",
      defaultMessage: \\"Hello World!\\"
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"overrideIdFn.js..5.object\\",
      defaultMessage: \\"NO ID\\"
    }));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "overrideIdFn.js.foo.bar.baz.12.string",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": Object {
          "metadata": "Additional metadata content.",
          "text": "Something for the translator.",
        },
        "id": "overrideIdFn.js.foo.bar.biff.12.object",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": Object {
          "metadata": "Additional metadata content.",
          "text": "Something for the translator. Another description",
        },
        "id": "overrideIdFn.js.foo.bar.zoo.12.object",
      },
      Object {
        "defaultMessage": "NO ID",
        "description": Object {
          "metadata": "Additional metadata content.",
          "text": "Something for the translator. Another description",
        },
        "id": "overrideIdFn.js..5.object",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`preserveWhitespace 1`] = `
Object {
  "code": "// @react-intl project:amazing
import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
var msgs = defineMessages({
  header: {
    id: \\"foo.bar.baz\\",
    defaultMessage: \\"Hello World!\\"
  },
  content: {
    id: \\"foo.bar.biff\\",
    defaultMessage: \\"Hello Nurse!\\"
  },
  kittens: {
    id: \\"app.home.kittens\\",
    defaultMessage: \\"{count, plural, =0 {\\\\uD83D\\\\uDE2D} one {# kitten} other {# kittens}}\\"
  },
  trailingWhitespace: {
    id: \\"trailing.ws\\",
    defaultMessage: \\"   Some whitespace   \\"
  },
  escaped: {
    id: \\"escaped.apostrophe\\",
    defaultMessage: \\"A quoted value ''{value}'\\"
  },
  newline: {
    id: \\"newline\\",
    defaultMessage: \\"this is     a message\\"
  },
  linebreak: {
    id: \\"linebreak\\",
    defaultMessage: \\"this is\\\\na message\\"
  },
  templateLinebreak: {
    id: \\"templateLinebreak\\",
    defaultMessage: \\"this is\\\\n    a message\\"
  }
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, /*#__PURE__*/React.createElement(\\"h1\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.header)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.content)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, msgs.kittens)), /*#__PURE__*/React.createElement(\\"p\\", null, /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"inline.linebreak\\",
      defaultMessage: \\"formatted message with linebreak\\"
    })));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message",
        "id": "foo.bar.baz",
      },
      Object {
        "defaultMessage": "Hello Nurse!",
        "description": "Another message",
        "id": "foo.bar.biff",
      },
      Object {
        "defaultMessage": "{count, plural, =0 {😭} one {# kitten} other {# kittens}}",
        "description": "Counts kittens",
        "id": "app.home.kittens",
      },
      Object {
        "defaultMessage": "   Some whitespace   ",
        "description": "Whitespace",
        "id": "trailing.ws",
      },
      Object {
        "defaultMessage": "A quoted value ''{value}'",
        "description": "Escaped apostrophe",
        "id": "escaped.apostrophe",
      },
      Object {
        "defaultMessage": "this is     a message",
        "description": "this is     a     description",
        "id": "newline",
      },
      Object {
        "defaultMessage": "this is
a message",
        "description": "this is
a
description",
        "id": "linebreak",
      },
      Object {
        "defaultMessage": "this is
    a message",
        "description": "this is
    a
    description",
        "id": "templateLinebreak",
      },
      Object {
        "defaultMessage": "formatted message
						with linebreak",
        "description": "foo
						bar",
        "id": "inline.linebreak",
      },
    ],
    "meta": Object {
      "project": "amazing",
    },
  },
}
`;

exports[`removeDefaultMessage + overrideIdFn 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
defineMessages({
  foo: {
    id: \\"removeDefaultMessage.js.greeting-user.13.string\\"
  },
  foo2: {
    id: \\"removeDefaultMessage.js..8.string\\"
  },
  foo3: {
    id: \\"removeDefaultMessage.js..8.string\\"
  }
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"removeDefaultMessage.js.greeting-world.12.string\\"
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"removeDefaultMessage.js..17.string\\"
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"removeDefaultMessage.js..12.string\\"
    }));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello, {name}",
        "description": "Greeting the user",
        "id": "removeDefaultMessage.js.greeting-user.13.string",
      },
      Object {
        "defaultMessage": "foo2-msg",
        "description": "foo2",
        "id": "removeDefaultMessage.js..8.string",
      },
      Object {
        "defaultMessage": "foo3-msg",
        "description": undefined,
        "id": "removeDefaultMessage.js..8.string",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "Greeting to the world",
        "id": "removeDefaultMessage.js.greeting-world.12.string",
      },
      Object {
        "defaultMessage": "message with desc",
        "description": "desc with desc",
        "id": "removeDefaultMessage.js..17.string",
      },
      Object {
        "defaultMessage": "message only",
        "description": undefined,
        "id": "removeDefaultMessage.js..12.string",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`removeDefaultMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
defineMessages({
  foo: {
    id: \\"greeting-user\\"
  },
  foo2: {
    id: \\"xoMBqZ\\"
  },
  foo3: {
    id: \\"s0FUZ6\\"
  }
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"greeting-world\\"
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"mdcDCs\\"
    }), /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"xjsqOM\\"
    }));
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "Hello, {name}",
        "description": "Greeting the user",
        "id": "greeting-user",
      },
      Object {
        "defaultMessage": "foo2-msg",
        "description": "foo2",
        "id": "xoMBqZ",
      },
      Object {
        "defaultMessage": "foo3-msg",
        "description": undefined,
        "id": "s0FUZ6",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "Greeting to the world",
        "id": "greeting-world",
      },
      Object {
        "defaultMessage": "message with desc",
        "description": "desc with desc",
        "id": "mdcDCs",
      },
      Object {
        "defaultMessage": "message only",
        "description": undefined,
        "id": "xjsqOM",
      },
    ],
    "meta": Object {},
  },
}
`;

exports[`skipExtractionFormattedMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';

function nonStaticId() {
  return 'baz';
}

export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo.bar.\\".concat(nonStaticId())
    });
  }

}",
  "data": Object {
    "messages": Array [],
    "meta": Object {},
  },
}
`;

exports[`templateLiteral 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage } from 'react-intl';
defineMessage({
  id: \\"template\\",
  defaultMessage: \\"should remove newline and extra spaces\\"
});
export default class Foo extends Component {
  render() {
    return /*#__PURE__*/React.createElement(FormattedMessage, {
      id: \\"foo.bar.baz\\",
      defaultMessage: \\"Hello World!\\"
    });
  }

}",
  "data": Object {
    "messages": Array [
      Object {
        "defaultMessage": "should remove newline and extra spaces",
        "description": undefined,
        "id": "template",
      },
      Object {
        "defaultMessage": "Hello World!",
        "description": "The default message.",
        "id": "foo.bar.baz",
      },
    ],
    "meta": Object {},
  },
}
`;
