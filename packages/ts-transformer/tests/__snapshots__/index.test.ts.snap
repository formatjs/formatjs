// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`emit asserts for [special] extractSourceLocation 1`] = `
"import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
export default class Foo extends Component {
    render() {
        return <FormattedMessage id=\\"foo.bar.baz\\" defaultMessage=\\"Hello World!\\"/>;
    }
}
"
`;

exports[`emit asserts for [special] extractSourceLocation 2`] = `
Object {
  "defaultMessage": "Hello World!",
  "end": 220,
  "file": StringContaining "extractSourceLocation.tsx",
  "id": "foo.bar.baz",
  "start": 152,
}
`;

exports[`emit asserts for FormattedMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
export default class Foo extends Component {
    render() {
        return (<p>
        <FormattedMessage id=\\"foo.bar.baz\\" defaultMessage=\\"Hello World! {foo, number}\\" values={{
                foo: 1,
            }}/>
        <FormattedMessage id=\\"foo.bar.baz\\" defaultMessage=\\"Hello World! {foo, number}\\" values={{
                foo: 1,
            }}/>
        <FormattedMessage id=\\"foo.bar.baz\\" defaultMessage=\\"Hello World! {foo, number}\\" values={{
                foo: 1,
            }}/>
      </p>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
  ],
}
`;

exports[`emit asserts for additionalComponentNames 1`] = `
Object {
  "code": "// @react-intl project:foo
import React, { Component } from 'react';
function CustomMessage() { }
export default class Foo extends Component {
    render() {
        return (<CustomMessage id=\\"greeting-world\\" defaultMessage=\\"Hello World!\\"/>);
    }
}
",
  "meta": Object {
    "project": "foo",
  },
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for additionalFunctionNames 1`] = `
Object {
  "code": "// @react-intl project:foo
import React, { Component } from 'react';
function CustomMessage() { }
export default class Foo extends Component {
    render() {
        return (<CustomMessage id={formatMessage({ id: \\"rL0Y20zC+F\\", defaultMessage: \\"foo\\" })} description={$formatMessage({ id: \\"rL0Y20zC+F\\", defaultMessage: \\"foo\\" })} defaultMessage=\\"Hello World!\\"/>);
    }
}
",
  "meta": Object {
    "project": "foo",
  },
  "msgs": Array [
    Object {
      "defaultMessage": "foo",
      "id": "rL0Y20zC+F",
    },
    Object {
      "defaultMessage": "foo",
      "id": "rL0Y20zC+F",
    },
  ],
}
`;

exports[`emit asserts for ast 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage, defineMessage } from 'react-intl';
const msgs = defineMessages({ header: { id: \\"HELLO.foo.bar.baz.12.string\\", defaultMessage: [{ type: 0, value: \\"Hello World!\\" }] }, content: { id: \\"HELLO.foo.bar.biff.12.object\\", defaultMessage: [{ type: 0, value: \\"Hello Nurse!\\" }] } });
defineMessage({ id: \\"HELLO..13.string\\", defaultMessage: [{ type: 0, value: \\"defineMessage\\" }] });
export default class Foo extends Component {
    render() {
        const { intl } = this.props;
        const { formatMessage } = intl;
        this.props.intl.formatMessage({ id: \\"HELLO..5.string\\", defaultMessage: [{ type: 0, value: \\"no-id\\" }] });
        intl.formatMessage({ id: \\"HELLO..18.string\\", defaultMessage: [{ type: 0, value: \\"intl.formatMessage\\" }] });
        formatMessage({ id: \\"HELLO..13.string\\", defaultMessage: [{ type: 0, value: \\"formatMessage\\" }] });
        formatMessage({ id: \\"HELLO..39.string\\", defaultMessage: [{ type: 6, value: \\"count\\", options: { \\"=0\\": { value: [{ type: 0, value: \\"zero\\" }] }, other: { value: [{ type: 0, value: \\"other\\" }] } }, offset: 0, pluralType: \\"cardinal\\" }] });
        return (<div>
        <h1>
          <FormattedMessage {...msgs.header}/>
        </h1>
        <p>
          <FormattedMessage {...msgs.content}/>
        </p>
        <FormattedMessage id=\\"HELLO.foo.bar.zoo.18.object\\" defaultMessage={[{ type: 0, value: \\"Hello World! \\" }, { type: 1, value: \\"abc\\" }]} values={{ abc: 2 }}/>
        <FormattedMessage id=\\"HELLO..18.object\\" defaultMessage={[{ type: 0, value: \\"Hello World! \\" }, { type: 1, value: \\"abc\\" }]} values={{ abc: 2 }}/>

        <FormattedMessage id=\\"HELLO..15.object\\" defaultMessage={[{ type: 2, value: \\"value\\", style: null }]} values={{ abc: 2 }}/>
      </div>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "HELLO.foo.bar.baz.12.string",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": Object {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator.",
      },
      "id": "HELLO.foo.bar.biff.12.object",
    },
    Object {
      "defaultMessage": "defineMessage",
      "description": "foo",
      "id": "HELLO..13.string",
    },
    Object {
      "defaultMessage": "no-id",
      "description": "no-id",
      "id": "HELLO..5.string",
    },
    Object {
      "defaultMessage": "intl.formatMessage",
      "description": "no-id",
      "id": "HELLO..18.string",
    },
    Object {
      "defaultMessage": "formatMessage",
      "description": "no-id",
      "id": "HELLO..13.string",
    },
    Object {
      "defaultMessage": "{count, plural, =0 {zero} other{other}}",
      "description": "no-id",
      "id": "HELLO..39.string",
    },
    Object {
      "defaultMessage": "Hello World! {abc}",
      "description": Object {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator. Another description",
      },
      "id": "HELLO.foo.bar.zoo.18.object",
    },
    Object {
      "defaultMessage": "Hello World! {abc}",
      "description": Object {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator. Another description",
      },
      "id": "HELLO..18.object",
    },
    Object {
      "defaultMessage": "{value, number}",
      "description": Object {
        "metadata": "number",
        "text": "number",
      },
      "id": "HELLO..15.object",
    },
  ],
}
`;

exports[`emit asserts for defineMessages 1`] = `
Object {
  "code": "// @react-intl project:foo file:bar
import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
const msgs = defineMessages({ header: { id: \\"foo.bar.baz\\", defaultMessage: \\"Hello World!\\" }, content: { id: \\"foo.bar.biff\\", defaultMessage: \\"Hello Nurse!\\" }, kittens: { id: \\"app.home.kittens\\", defaultMessage: \\"{count, plural, =0 {\\\\uD83D\\\\uDE2D} one {# kitten} other {# kittens}}\\" }, trailingWhitespace: { id: \\"trailing.ws\\", defaultMessage: \\"Some whitespace\\" }, escaped: { id: \\"escaped.apostrophe\\", defaultMessage: \\"A quoted value ''{value}'\\" }, quoted: { id: \\"escaped.apostrophe\\", defaultMessage: \\"What's going on\\" }, newline: { id: \\"newline\\", defaultMessage: \\"this is a message\\" } });
export default class Foo extends Component {
    render() {
        return (<div>
        <h1>
          <FormattedMessage {...msgs.header}/>
        </h1>
        <p>
          <FormattedMessage {...msgs.content}/>
        </p>
        <p>
          <FormattedMessage {...msgs.kittens}/>
          <FormattedMessage id=\\"inline\\" defaultMessage=\\"formatted message\\"/>
        </p>
      </div>);
    }
}
",
  "meta": Object {
    "file": "bar",
    "project": "foo",
  },
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    Object {
      "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
      "description": "Counts kittens",
      "id": "app.home.kittens",
    },
    Object {
      "defaultMessage": "Some whitespace",
      "description": "Whitespace",
      "id": "trailing.ws",
    },
    Object {
      "defaultMessage": "A quoted value ''{value}'",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    Object {
      "defaultMessage": "What's going on",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    Object {
      "defaultMessage": "this is a message",
      "description": "this is     a     description",
      "id": "newline",
    },
    Object {
      "defaultMessage": "formatted message",
      "description": "foo",
      "id": "inline",
    },
  ],
}
`;

exports[`emit asserts for defineMessagesPreserveWhitespace 1`] = `
Object {
  "code": "// @react-intl project:foo file:bar
import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
const msgs = defineMessages({ header: { id: \\"foo.bar.baz\\", defaultMessage: \\"Hello World!\\" }, content: { id: \\"foo.bar.biff\\", defaultMessage: \\"Hello Nurse!\\" }, kittens: { id: \\"app.home.kittens\\", defaultMessage: \\"{count, plural, =0 {\\\\uD83D\\\\uDE2D} one {# kitten} other {# kittens}}\\" }, trailingWhitespace: { id: \\"trailing.ws\\", defaultMessage: \\"   Some whitespace   \\" }, escaped: { id: \\"escaped.apostrophe\\", defaultMessage: \\"A quoted value ''{value}'\\" }, quoted: { id: \\"escaped.apostrophe\\", defaultMessage: \\"What's going on\\" }, newline: { id: \\"newline\\", defaultMessage: \\"this is     a message\\" }, linebreak: { id: \\"linebreak\\", defaultMessage: \\"this is\\\\na message\\" }, templateLinebreak: { id: \\"templateLinebreak\\", defaultMessage: \\"this is\\\\n    a message\\" } });
export default class Foo extends Component {
    render() {
        return (<div>
        <h1>
          <FormattedMessage {...msgs.header}/>
        </h1>
        <p>
          <FormattedMessage {...msgs.content}/>
        </p>
        <p>
          <FormattedMessage {...msgs.kittens}/>
          <FormattedMessage id=\\"inline\\" defaultMessage=\\"formatted message\\"/>
          <FormattedMessage id=\\"inline.linebreak\\" defaultMessage=\\"formatted message&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;with linebreak\\"/>
        </p>
      </div>);
    }
}
",
  "meta": Object {
    "file": "bar",
    "project": "foo",
  },
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    Object {
      "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
      "description": "Counts kittens",
      "id": "app.home.kittens",
    },
    Object {
      "defaultMessage": "   Some whitespace   ",
      "description": "Whitespace",
      "id": "trailing.ws",
    },
    Object {
      "defaultMessage": "A quoted value ''{value}'",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    Object {
      "defaultMessage": "What's going on",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    Object {
      "defaultMessage": "this is     a message",
      "description": "this is     a     description",
      "id": "newline",
    },
    Object {
      "defaultMessage": "this is
a message",
      "description": "this is
a
description",
      "id": "linebreak",
    },
    Object {
      "defaultMessage": "this is
    a message",
      "description": "this is
    a
    description",
      "id": "templateLinebreak",
    },
    Object {
      "defaultMessage": "formatted message",
      "description": "foo",
      "id": "inline",
    },
    Object {
      "defaultMessage": "formatted message
						with linebreak",
      "description": "foo
						bar",
      "id": "inline.linebreak",
    },
  ],
}
`;

exports[`emit asserts for descriptionsAsObjects 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
export default class Foo extends Component {
    render() {
        return (<FormattedMessage id=\\"foo.bar.baz\\" defaultMessage=\\"Hello World!\\"/>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": Object {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator.",
      },
      "id": "foo.bar.baz",
    },
  ],
}
`;

exports[`emit asserts for extractFromFormatMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { injectIntl, FormattedMessage } from 'react-intl';
const objectPointer = {
    id: 'foo.bar.invalid',
    defaultMessage: 'This cannot be extracted',
    description: 'the plugin only supports inline objects',
};
class Foo extends Component {
    render() {
        const { intl } = this.props;
        const msgs = {
            baz: this.props.intl.formatMessage({ id: \\"foo.bar.baz\\", defaultMessage: \\"Hello World!\\" }),
            biff: intl.formatMessage({ id: \\"foo.bar.biff\\", defaultMessage: \\"Hello Nurse!\\" }),
            invalid: this.props.intl.formatMessage(objectPointer),
            invalid2: this.props.intl.formatMessage({
                id,
                defaultMessage,
                description: 'asd',
            }),
        };
        return (<div>
        <h1>{msgs.header}</h1>
        <p>{msgs.content}</p>
        <input placeholder={intl.formatMessage({ id: \\"A/2tFVt1SI\\", defaultMessage: \\"inline\\" })}/>
        <span>
          <FormattedMessage id=\\"foo\\" defaultMessage=\\"bar\\"/>
        </span>
      </div>);
    }
}
export default injectIntl(Foo);
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    Object {
      "defaultMessage": "inline",
      "id": "A/2tFVt1SI",
    },
    Object {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for extractFromFormatMessageStateless 1`] = `
Object {
  "code": "import { FormattedMessage, injectIntl, useIntl } from 'react-intl';
import React from 'react';
function myFunction(param1, { formatMessage, formatDate }) {
    return (formatMessage({ id: \\"inline1\\", defaultMessage: \\"Hello params!\\" }) + formatDate(new Date()));
}
const child = myFunction(filterable, intl);
function SFC() {
    const { formatMessage } = useIntl();
    return formatMessage({ id: \\"hook\\", defaultMessage: \\"hook\\" });
}
const Foo = ({ intl: { formatMessage } }) => {
    const msgs = {
        qux: formatMessage({ id: \\"foo.bar.quux\\", defaultMessage: \\"Hello Stateless!\\" }),
    };
    return (<div>
      <h1>{msgs.header}</h1>
      <p>{msgs.content}</p>
      <span>
        <FormattedMessage id=\\"foo\\" defaultMessage=\\"bar\\"/>
      </span>
    </div>);
};
export default injectIntl(Foo);
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello params!",
      "description": "A stateless message",
      "id": "inline1",
    },
    Object {
      "defaultMessage": "hook",
      "description": "hook",
      "id": "hook",
    },
    Object {
      "defaultMessage": "Hello Stateless!",
      "description": "A stateless message",
      "id": "foo.bar.quux",
    },
    Object {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for formatMessageCall 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { injectIntl, FormattedMessage } from 'react-intl';
const objectPointer = {
    id: 'foo.bar.invalid',
    defaultMessage: 'This cannot be extracted',
    description: 'the plugin only supports inline objects',
};
class Foo extends Component {
    render() {
        const msgs = {
            baz: formatMessage({ id: \\"foo.bar.baz\\", defaultMessage: \\"Hello World!\\" }),
            baz2: this.props.intl.$formatMessage({ id: \\"foo.bar.baz2\\", defaultMessage: \\"Hello World!\\" }),
            biff: $formatMessage({ id: \\"foo.bar.biff\\", defaultMessage: \\"Hello Nurse!\\" }),
            invalid: this.props.intl.formatMessage(objectPointer),
        };
        return (<div>
        <h1>{msgs.header}</h1>
        <p>{msgs.content}</p>
        <input placeholder={intl.formatMessage({ id: \\"A/2tFVt1SI\\", defaultMessage: \\"inline\\" })}/>
        <span>
          <FormattedMessage id=\\"foo\\" defaultMessage=\\"bar\\"/>
        </span>
      </div>);
    }
}
export default injectIntl(Foo);
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message $$$",
      "id": "foo.bar.baz2",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    Object {
      "defaultMessage": "inline",
      "id": "A/2tFVt1SI",
    },
    Object {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for inline 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage } from 'react-intl';
export default class Foo extends Component {
    render() {
        return (<div>
        <FormattedMessage id=\\"foo.bar.baz\\" defaultMessage=\\"Hello World!\\"/>
        {defineMessage({ id: \\"header\\", defaultMessage: \\"Hello World!\\" })}
        {defineMessage({ id: \\"header2\\", defaultMessage: \\"Hello World!\\" })}
      </div>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "header",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "header2",
    },
  ],
}
`;

exports[`emit asserts for nested 1`] = `
Object {
  "code": "intl.formatMessage({ id: \\"HELLO..13.undefined\\", defaultMessage: \\"layer1 {name}\\" }, {
    name: intl.formatMessage({ id: \\"HELLO..6.undefined\\", defaultMessage: \\"layer2\\" }),
});
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "layer1 {name}",
      "id": "HELLO..13.undefined",
    },
    Object {
      "defaultMessage": "layer2",
      "id": "HELLO..6.undefined",
    },
  ],
}
`;

exports[`emit asserts for noImport 1`] = `
Object {
  "code": "export function foo() {
    props.intl.formatMessage({ id: \\"hYpBl\\", defaultMessage: \\"props {intl}\\" }, { bar: 'bar' });
    this.props.intl.formatMessage({ id: \\"tBZlS\\", defaultMessage: \\"this props {intl}\\" }, { bar: 'bar' });
    return intl.formatMessage({ id: \\"ALfyd\\", defaultMessage: \\"foo {bar}\\" }, { bar: 'bar' });
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "props {intl}",
      "description": "bar",
      "id": "hYpBl",
    },
    Object {
      "defaultMessage": "this props {intl}",
      "description": "bar",
      "id": "tBZlS",
    },
    Object {
      "defaultMessage": "foo {bar}",
      "description": "bar",
      "id": "ALfyd",
    },
  ],
}
`;

exports[`emit asserts for overrideIdFn 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage, defineMessage } from 'react-intl';
const msgs = defineMessages({ header: { id: \\"HELLO.foo.bar.baz.12.string\\", defaultMessage: \\"Hello World!\\" }, content: { id: \\"HELLO.foo.bar.biff.12.object\\", defaultMessage: \\"Hello Nurse!\\" } });
defineMessage({ id: \\"HELLO..13.string\\", defaultMessage: \\"defineMessage\\" });
export default class Foo extends Component {
    render() {
        const { intl } = this.props;
        const { formatMessage } = intl;
        this.props.intl.formatMessage({ id: \\"HELLO..5.string\\", defaultMessage: \\"no-id\\" });
        intl.formatMessage({ id: \\"HELLO..18.string\\", defaultMessage: \\"intl.formatMessage\\" });
        formatMessage({ id: \\"HELLO..13.string\\", defaultMessage: \\"formatMessage\\" });
        return (<div>
        <h1>
          <FormattedMessage {...msgs.header}/>
        </h1>
        <p>
          <FormattedMessage {...msgs.content}/>
        </p>
        <FormattedMessage id=\\"HELLO.foo.bar.zoo.18.object\\" defaultMessage=\\"Hello World! {abc}\\" values={{ abc: 2 }}/>
        <FormattedMessage id=\\"HELLO..18.object\\" defaultMessage=\\"Hello World! {abc}\\" values={{ abc: 2 }}/>
      </div>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "HELLO.foo.bar.baz.12.string",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": Object {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator.",
      },
      "id": "HELLO.foo.bar.biff.12.object",
    },
    Object {
      "defaultMessage": "defineMessage",
      "description": "foo",
      "id": "HELLO..13.string",
    },
    Object {
      "defaultMessage": "no-id",
      "description": "no-id",
      "id": "HELLO..5.string",
    },
    Object {
      "defaultMessage": "intl.formatMessage",
      "description": "no-id",
      "id": "HELLO..18.string",
    },
    Object {
      "defaultMessage": "formatMessage",
      "description": "no-id",
      "id": "HELLO..13.string",
    },
    Object {
      "defaultMessage": "Hello World! {abc}",
      "description": Object {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator. Another description",
      },
      "id": "HELLO.foo.bar.zoo.18.object",
    },
    Object {
      "defaultMessage": "Hello World! {abc}",
      "description": Object {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator. Another description",
      },
      "id": "HELLO..18.object",
    },
  ],
}
`;

exports[`emit asserts for removeDefaultMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
const messages = defineMessages({ foo: { id: \\"greeting-user\\" } });
export default class Foo extends Component {
    render() {
        return (<FormattedMessage id=\\"greeting-world\\"/>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello, {name}",
      "description": "Greeting the user",
      "id": "greeting-user",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for removeDescription 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
const messages = defineMessages({ foo: { id: \\"greeting-user\\", defaultMessage: \\"Hello, {name}\\" } });
export default class Foo extends Component {
    render() {
        return (<FormattedMessage id=\\"greeting-world\\" defaultMessage=\\"Hello World!\\"/>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello, {name}",
      "description": "Greeting the user",
      "id": "greeting-user",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for resourcePath 1`] = `
Object {
  "code": "export function foo() {
    props.intl.formatMessage({ id: \\"resourcePath-hYpBl\\", defaultMessage: \\"props {intl}\\" }, { bar: 'bar' });
    this.props.intl.formatMessage({ id: \\"resourcePath-tBZlS\\", defaultMessage: \\"this props {intl}\\" }, { bar: 'bar' });
    return intl.formatMessage({ id: \\"resourcePath-ALfyd\\", defaultMessage: \\"foo {bar}\\" }, { bar: 'bar' });
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "props {intl}",
      "description": "bar",
      "id": "resourcePath-hYpBl",
    },
    Object {
      "defaultMessage": "this props {intl}",
      "description": "bar",
      "id": "resourcePath-tBZlS",
    },
    Object {
      "defaultMessage": "foo {bar}",
      "description": "bar",
      "id": "resourcePath-ALfyd",
    },
  ],
}
`;

exports[`emit asserts for stringConcat 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage } from 'react-intl';
export default class Foo extends Component {
    render() {
        return (<div>
        <FormattedMessage id=\\"foo.bar.bazid\\" defaultMessage=\\"Hello World!farbaz\\"/>
        {intl.formatMessage({ id: \\"header\\", defaultMessage: \\"Hello World!foobar\\" })}
        {defineMessage({ id: \\"header2\\", defaultMessage: \\"Hello World!\\" })}
      </div>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!farbaz",
      "description": "The default message.",
      "id": "foo.bar.bazid",
    },
    Object {
      "defaultMessage": "Hello World!foobar",
      "description": "The default message",
      "id": "header",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message asd",
      "id": "header2",
    },
  ],
}
`;

exports[`emit asserts for templateLiteral 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage } from 'react-intl';
defineMessage({ id: \\"template\\", defaultMessage: \\"should remove newline and extra spaces\\" });
export default class Foo extends Component {
    render() {
        return (<FormattedMessage id=\\"foo.bar.baz\\" defaultMessage=\\"Hello World!\\"/>);
    }
}
",
  "meta": Object {},
  "msgs": Array [
    Object {
      "defaultMessage": "should remove newline and extra spaces",
      "id": "template",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
  ],
}
`;
