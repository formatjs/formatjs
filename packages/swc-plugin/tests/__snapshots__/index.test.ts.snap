// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`emit asserts for [special] extractSourceLocation 1`] = `
"import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo.bar.baz\\",
                    defaultMessage: \\"Hello World!\\"
                }));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
"
`;

exports[`emit asserts for [special] extractSourceLocation 2`] = `
Object {
  "defaultMessage": "Hello World!",
  "end": 6936,
  "file": StringContaining "extractSourceLocation.tsx",
  "id": "foo.bar.baz",
  "start": 6869,
}
`;

exports[`emit asserts for FormattedMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(\\"p\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo.bar.baz\\",
                    defaultMessage: \\"Hello World! {foo, number}\\",
                    values: {
                        foo: 1
                    }
                }), /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo.bar.baz\\",
                    defaultMessage: \\"Hello World! {foo, number}\\",
                    values: {
                        foo: 1
                    }
                }), /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo.bar.baz\\",
                    defaultMessage: \\"Hello World! {foo, number}\\",
                    values: {
                        foo: 1
                    }
                })));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
  ],
}
`;

exports[`emit asserts for additionalComponentNames 1`] = `
Object {
  "code": "import React, { Component } from 'react';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
function CustomMessage() {
}
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(CustomMessage, {
                    id: \\"greeting-world\\",
                    defaultMessage: \\"Hello World!\\"
                }));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for additionalFunctionNames 1`] = `
Object {
  "code": "import React, { Component } from 'react';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
function CustomMessage() {
}
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(CustomMessage, {
                    id: formatMessage(_defineProperty({
                        id: \\"rL0Y20zC+F\\",
                        defaultMessage: \\"foo\\"
                    }, \\"defaultMessage\\", 'foo')),
                    description: $formatMessage(_defineProperty({
                        id: \\"rL0Y20zC+F\\",
                        defaultMessage: \\"foo\\"
                    }, \\"defaultMessage\\", 'foo')),
                    defaultMessage: \\"Hello World!\\"
                }));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "foo",
      "id": "rL0Y20zC+F",
    },
    Object {
      "defaultMessage": "foo",
      "id": "rL0Y20zC+F",
    },
  ],
}
`;

exports[`emit asserts for defineMessages 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var msgs = defineMessages({
    header: {
        id: 'foo.bar.baz',
        defaultMessage: 'Hello World!',
        description: 'The default message'
    },
    content: {
        id: 'foo.bar.biff',
        defaultMessage: 'Hello Nurse!',
        description: 'Another message'
    },
    kittens: {
        id: 'app.home.kittens',
        description: 'Counts kittens',
        defaultMessage: '{count, plural, =0 {😭} one {# kitten} other {# kittens}}'
    },
    trailingWhitespace: {
        id: 'trailing.ws',
        description: 'Whitespace',
        defaultMessage: '   Some whitespace   '
    },
    escaped: {
        id: 'escaped.apostrophe',
        description: 'Escaped apostrophe',
        defaultMessage: \\"A quoted value ''{value}'\\"
    },
    quoted: {
        id: 'escaped.apostrophe',
        description: 'Escaped apostrophe',
        defaultMessage: \\"What's going on\\"
    },
    newline: {
        id: 'newline',
        description: 'this is     a     description',
        defaultMessage: 'this is     a message'
    }
});
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(\\"div\\", null, /*#__PURE__*/ React.createElement(\\"h1\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.header))), /*#__PURE__*/ React.createElement(\\"p\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.content))), /*#__PURE__*/ React.createElement(\\"p\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.kittens)), /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"inline\\",
                    defaultMessage: \\"formatted message\\"
                }))));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "formatted message",
      "description": "foo",
      "id": "inline",
    },
  ],
}
`;

exports[`emit asserts for defineMessagesPreserveWhitespace 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var msgs = defineMessages({
    header: {
        id: 'foo.bar.baz',
        defaultMessage: 'Hello World!',
        description: 'The default message'
    },
    content: {
        id: 'foo.bar.biff',
        defaultMessage: 'Hello Nurse!',
        description: 'Another message'
    },
    kittens: {
        id: 'app.home.kittens',
        description: 'Counts kittens',
        defaultMessage: '{count, plural, =0 {😭} one {# kitten} other {# kittens}}'
    },
    trailingWhitespace: {
        id: 'trailing.ws',
        description: 'Whitespace',
        defaultMessage: '   Some whitespace   '
    },
    escaped: {
        id: 'escaped.apostrophe',
        description: 'Escaped apostrophe',
        defaultMessage: \\"A quoted value ''{value}'\\"
    },
    quoted: {
        id: 'escaped.apostrophe',
        description: 'Escaped apostrophe',
        defaultMessage: \\"What's going on\\"
    },
    newline: {
        id: 'newline',
        description: 'this is     a     description',
        defaultMessage: 'this is     a message'
    },
    linebreak: {
        id: 'linebreak',
        description: 'this is\\\\na\\\\ndescription',
        defaultMessage: 'this is\\\\na message'
    },
    templateLinebreak: {
        id: 'templateLinebreak',
        description: \\"this is\\\\n    a\\\\n    description\\",
        defaultMessage: \\"this is\\\\n    a message\\"
    }
});
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(\\"div\\", null, /*#__PURE__*/ React.createElement(\\"h1\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.header))), /*#__PURE__*/ React.createElement(\\"p\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.content))), /*#__PURE__*/ React.createElement(\\"p\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.kittens)), /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"inline\\",
                    defaultMessage: \\"formatted message\\"
                }), /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"inline.linebreak\\",
                    defaultMessage: \\"formatted message with linebreak\\"
                }))));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "formatted message",
      "description": "foo",
      "id": "inline",
    },
    Object {
      "defaultMessage": "formatted message

						with linebreak",
      "description": "foo

						bar",
      "id": "inline.linebreak",
    },
  ],
}
`;

exports[`emit asserts for extractFromFormatMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { injectIntl, FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var objectPointer = {
    id: 'foo.bar.invalid',
    defaultMessage: 'This cannot be extracted',
    description: 'the plugin only supports inline objects'
};
var _obj, _obj1;
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                var intl = this.props.intl;
                var msgs = {
                    baz: this.props.intl.formatMessage((_obj = {
                        id: \\"foo.bar.baz\\",
                        defaultMessage: \\"Hello World!\\"
                    }, _defineProperty(_obj, \\"id\\", 'foo.bar.baz'), _defineProperty(_obj, \\"defaultMessage\\", 'Hello World!'), _defineProperty(_obj, \\"description\\", 'The default message'), _obj)),
                    biff: intl.formatMessage((_obj1 = {
                        id: \\"foo.bar.biff\\",
                        defaultMessage: \\"Hello Nurse!\\"
                    }, _defineProperty(_obj1, \\"id\\", 'foo.bar.biff'), _defineProperty(_obj1, \\"defaultMessage\\", 'Hello Nurse!'), _defineProperty(_obj1, \\"description\\", 'Another message'), _obj1)),
                    invalid: this.props.intl.formatMessage(objectPointer),
                    invalid2: this.props.intl.formatMessage({
                        id: id,
                        defaultMessage: defaultMessage,
                        description: 'asd'
                    })
                };
                return(/*#__PURE__*/ React.createElement(\\"div\\", null, /*#__PURE__*/ React.createElement(\\"h1\\", null, msgs.header), /*#__PURE__*/ React.createElement(\\"p\\", null, msgs.content), /*#__PURE__*/ React.createElement(\\"input\\", {
                    placeholder: intl.formatMessage(_defineProperty({
                        id: \\"A/2tFVt1SI\\",
                        defaultMessage: \\"inline\\"
                    }, \\"defaultMessage\\", 'inline'))
                }), /*#__PURE__*/ React.createElement(\\"span\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo\\",
                    defaultMessage: \\"bar\\"
                }))));
            }
        }
    ]);
    return Foo;
}(Component);
export default injectIntl(Foo);
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    Object {
      "defaultMessage": "inline",
      "id": "A/2tFVt1SI",
    },
    Object {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for extractFromFormatMessageStateless 1`] = `
Object {
  "code": "import { FormattedMessage, injectIntl, useIntl } from 'react-intl';
import React from 'react';
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
var _obj;
function myFunction(param1, param) {
    var formatMessage = param.formatMessage, formatDate = param.formatDate;
    return formatMessage((_obj = {
        id: \\"inline1\\",
        defaultMessage: \\"Hello params!\\"
    }, _defineProperty(_obj, \\"id\\", 'inline1'), _defineProperty(_obj, \\"defaultMessage\\", 'Hello params!'), _defineProperty(_obj, \\"description\\", 'A stateless message'), _obj)) + formatDate(new Date());
}
var child = myFunction(filterable, intl);
var _obj1;
function SFC() {
    var formatMessage = useIntl().formatMessage;
    return formatMessage((_obj1 = {
        id: \\"hook\\",
        defaultMessage: \\"hook\\"
    }, _defineProperty(_obj1, \\"id\\", 'hook'), _defineProperty(_obj1, \\"defaultMessage\\", 'hook'), _defineProperty(_obj1, \\"description\\", 'hook'), _obj1));
}
var _obj2;
var Foo = function(param) {
    var formatMessage = param.intl.formatMessage;
    var msgs = {
        qux: formatMessage((_obj2 = {
            id: \\"foo.bar.quux\\",
            defaultMessage: \\"Hello Stateless!\\"
        }, _defineProperty(_obj2, \\"id\\", 'foo.bar.quux'), _defineProperty(_obj2, \\"defaultMessage\\", 'Hello Stateless!'), _defineProperty(_obj2, \\"description\\", 'A stateless message'), _obj2))
    };
    return(/*#__PURE__*/ React.createElement(\\"div\\", null, /*#__PURE__*/ React.createElement(\\"h1\\", null, msgs.header), /*#__PURE__*/ React.createElement(\\"p\\", null, msgs.content), /*#__PURE__*/ React.createElement(\\"span\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
        id: \\"foo\\",
        defaultMessage: \\"bar\\"
    }))));
};
export default injectIntl(Foo);
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello params!",
      "description": "A stateless message",
      "id": "inline1",
    },
    Object {
      "defaultMessage": "hook",
      "description": "hook",
      "id": "hook",
    },
    Object {
      "defaultMessage": "Hello Stateless!",
      "description": "A stateless message",
      "id": "foo.bar.quux",
    },
    Object {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for formatMessageCall 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { injectIntl, FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var objectPointer = {
    id: 'foo.bar.invalid',
    defaultMessage: 'This cannot be extracted',
    description: 'the plugin only supports inline objects'
};
var _obj, _obj1, _obj2;
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                var msgs = {
                    baz: formatMessage((_obj = {
                        id: \\"foo.bar.baz\\",
                        defaultMessage: \\"Hello World!\\"
                    }, _defineProperty(_obj, \\"id\\", 'foo.bar.baz'), _defineProperty(_obj, \\"defaultMessage\\", 'Hello World!'), _defineProperty(_obj, \\"description\\", 'The default message'), _obj)),
                    baz2: this.props.intl.$formatMessage((_obj1 = {
                        id: \\"foo.bar.baz2\\",
                        defaultMessage: \\"Hello World!\\"
                    }, _defineProperty(_obj1, \\"id\\", 'foo.bar.baz2'), _defineProperty(_obj1, \\"defaultMessage\\", 'Hello World!'), _defineProperty(_obj1, \\"description\\", 'The default message $$$'), _obj1)),
                    biff: $formatMessage((_obj2 = {
                        id: \\"foo.bar.biff\\",
                        defaultMessage: \\"Hello Nurse!\\"
                    }, _defineProperty(_obj2, \\"id\\", 'foo.bar.biff'), _defineProperty(_obj2, \\"defaultMessage\\", 'Hello Nurse!'), _defineProperty(_obj2, \\"description\\", 'Another message'), _obj2)),
                    invalid: this.props.intl.formatMessage(objectPointer)
                };
                return(/*#__PURE__*/ React.createElement(\\"div\\", null, /*#__PURE__*/ React.createElement(\\"h1\\", null, msgs.header), /*#__PURE__*/ React.createElement(\\"p\\", null, msgs.content), /*#__PURE__*/ React.createElement(\\"input\\", {
                    placeholder: intl.formatMessage(_defineProperty({
                        id: \\"A/2tFVt1SI\\",
                        defaultMessage: \\"inline\\"
                    }, \\"defaultMessage\\", 'inline'))
                }), /*#__PURE__*/ React.createElement(\\"span\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo\\",
                    defaultMessage: \\"bar\\"
                }))));
            }
        }
    ]);
    return Foo;
}(Component);
export default injectIntl(Foo);
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message $$$",
      "id": "foo.bar.baz2",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    Object {
      "defaultMessage": "inline",
      "id": "A/2tFVt1SI",
    },
    Object {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for inline 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var _obj, _obj1;
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(\\"div\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo.bar.baz\\",
                    defaultMessage: \\"Hello World!\\"
                }), defineMessage((_obj = {
                    id: \\"header\\",
                    defaultMessage: \\"Hello World!\\"
                }, _defineProperty(_obj, \\"id\\", 'header'), _defineProperty(_obj, \\"defaultMessage\\", 'Hello World!'), _defineProperty(_obj, \\"description\\", 'The default message'), _obj)), defineMessage((_obj1 = {
                    id: \\"header2\\",
                    defaultMessage: \\"Hello World!\\"
                }, _defineProperty(_obj1, \\"id\\", 'header2'), _defineProperty(_obj1, \\"defaultMessage\\", 'Hello World!'), _defineProperty(_obj1, \\"description\\", 'The default message'), _obj1))));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "header",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "header2",
    },
  ],
}
`;

exports[`emit asserts for nested 1`] = `
Object {
  "code": "function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
intl.formatMessage(_defineProperty({
    id: \\"HELLO..13.undefined\\",
    defaultMessage: \\"layer1 {name}\\"
}, \\"defaultMessage\\", 'layer1 {name}'), {
    name: intl.formatMessage({
        defaultMessage: 'layer2'
    })
});
",
  "msgs": Array [
    Object {
      "defaultMessage": "layer1 {name}",
      "id": "HELLO..13.undefined",
    },
  ],
}
`;

exports[`emit asserts for noImport 1`] = `
Object {
  "code": "function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
var _obj, _obj1, _obj2;
export function foo() {
    props.intl.formatMessage((_obj = {
        id: \\"hYpBl\\",
        defaultMessage: \\"props {intl}\\"
    }, _defineProperty(_obj, \\"defaultMessage\\", 'props {intl}'), _defineProperty(_obj, \\"description\\", 'bar'), _obj), {
        bar: 'bar'
    });
    this.props.intl.formatMessage((_obj1 = {
        id: \\"tBZlS\\",
        defaultMessage: \\"this props {intl}\\"
    }, _defineProperty(_obj1, \\"defaultMessage\\", 'this props {intl}'), _defineProperty(_obj1, \\"description\\", 'bar'), _obj1), {
        bar: 'bar'
    });
    return intl.formatMessage((_obj2 = {
        id: \\"ALfyd\\",
        defaultMessage: \\"foo {bar}\\"
    }, _defineProperty(_obj2, \\"defaultMessage\\", 'foo {bar}'), _defineProperty(_obj2, \\"description\\", 'bar'), _obj2), {
        bar: 'bar'
    });
}
",
  "msgs": Array [
    Object {
      "defaultMessage": "props {intl}",
      "description": "bar",
      "id": "hYpBl",
    },
    Object {
      "defaultMessage": "this props {intl}",
      "description": "bar",
      "id": "tBZlS",
    },
    Object {
      "defaultMessage": "foo {bar}",
      "description": "bar",
      "id": "ALfyd",
    },
  ],
}
`;

exports[`emit asserts for overrideIdFn 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage, defineMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var _obj, _obj1;
var msgs = defineMessages({
    header: (_obj = {
        id: \\"HELLO.foo.bar.baz.12.string\\",
        defaultMessage: \\"Hello World!\\"
    }, _defineProperty(_obj, \\"id\\", 'foo.bar.baz'), _defineProperty(_obj, \\"defaultMessage\\", 'Hello World!'), _defineProperty(_obj, \\"description\\", 'The default message'), _obj),
    content: (_obj1 = {
        id: \\"HELLO.foo.bar.biff.12.undefined\\",
        defaultMessage: \\"Hello Nurse!\\"
    }, _defineProperty(_obj1, \\"id\\", 'foo.bar.biff'), _defineProperty(_obj1, \\"defaultMessage\\", 'Hello Nurse!'), _defineProperty(_obj1, \\"description\\", {
        text: 'Something for the translator.',
        metadata: 'Additional metadata content.'
    }), _obj1)
});
var _obj2;
defineMessage((_obj2 = {
    id: \\"HELLO..13.string\\",
    defaultMessage: \\"defineMessage\\"
}, _defineProperty(_obj2, \\"defaultMessage\\", 'defineMessage'), _defineProperty(_obj2, \\"description\\", 'foo'), _obj2));
var _obj3, _obj4, _obj5;
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                var intl = this.props.intl;
                var formatMessage = intl.formatMessage;
                this.props.intl.formatMessage((_obj3 = {
                    id: \\"HELLO..5.string\\",
                    defaultMessage: \\"no-id\\"
                }, _defineProperty(_obj3, \\"defaultMessage\\", 'no-id'), _defineProperty(_obj3, \\"description\\", 'no-id'), _obj3));
                intl.formatMessage((_obj4 = {
                    id: \\"HELLO..18.string\\",
                    defaultMessage: \\"intl.formatMessage\\"
                }, _defineProperty(_obj4, \\"defaultMessage\\", 'intl.formatMessage'), _defineProperty(_obj4, \\"description\\", 'no-id'), _obj4));
                formatMessage((_obj5 = {
                    id: \\"HELLO..13.string\\",
                    defaultMessage: \\"formatMessage\\"
                }, _defineProperty(_obj5, \\"defaultMessage\\", 'formatMessage'), _defineProperty(_obj5, \\"description\\", 'no-id'), _obj5));
                return(/*#__PURE__*/ React.createElement(\\"div\\", null, /*#__PURE__*/ React.createElement(\\"h1\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.header))), /*#__PURE__*/ React.createElement(\\"p\\", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({
                }, msgs.content))), /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"HELLO.foo.bar.zoo.18.undefined\\",
                    defaultMessage: \\"Hello World! {abc}\\",
                    values: {
                        abc: 2
                    }
                }), /*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"HELLO..18.undefined\\",
                    defaultMessage: \\"Hello World! {abc}\\",
                    values: {
                        abc: 2
                    }
                })));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "HELLO.foo.bar.baz.12.string",
    },
    Object {
      "defaultMessage": "Hello Nurse!",
      "id": "HELLO.foo.bar.biff.12.undefined",
    },
    Object {
      "defaultMessage": "defineMessage",
      "description": "foo",
      "id": "HELLO..13.string",
    },
    Object {
      "defaultMessage": "no-id",
      "description": "no-id",
      "id": "HELLO..5.string",
    },
    Object {
      "defaultMessage": "intl.formatMessage",
      "description": "no-id",
      "id": "HELLO..18.string",
    },
    Object {
      "defaultMessage": "formatMessage",
      "description": "no-id",
      "id": "HELLO..13.string",
    },
    Object {
      "defaultMessage": "Hello World! {abc}",
      "id": "HELLO.foo.bar.zoo.18.undefined",
    },
    Object {
      "defaultMessage": "Hello World! {abc}",
      "id": "HELLO..18.undefined",
    },
  ],
}
`;

exports[`emit asserts for removeDefaultMessage 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var _obj;
var messages = defineMessages({
    foo: (_obj = {
        id: \\"greeting-user\\"
    }, _defineProperty(_obj, \\"id\\", 'greeting-user'), _defineProperty(_obj, \\"description\\", 'Greeting the user'), _defineProperty(_obj, \\"defaultMessage\\", 'Hello, {name}'), _obj)
});
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"greeting-world\\"
                }));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello, {name}",
      "description": "Greeting the user",
      "id": "greeting-user",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for removeDescription 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { defineMessages, FormattedMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var _obj;
var messages = defineMessages({
    foo: (_obj = {
        id: \\"greeting-user\\",
        defaultMessage: \\"Hello, {name}\\"
    }, _defineProperty(_obj, \\"id\\", 'greeting-user'), _defineProperty(_obj, \\"description\\", 'Greeting the user'), _defineProperty(_obj, \\"defaultMessage\\", 'Hello, {name}'), _obj)
});
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"greeting-world\\",
                    defaultMessage: \\"Hello World!\\"
                }));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "Hello, {name}",
      "description": "Greeting the user",
      "id": "greeting-user",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for templateLiteral 1`] = `
Object {
  "code": "import React, { Component } from 'react';
import { FormattedMessage, defineMessage } from 'react-intl';
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError(\\"Cannot call a class as a function\\");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (\\"value\\" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== \\"function\\" && superClass !== null) {
        throw new TypeError(\\"Super expression must either be null or a function\\");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    return obj && typeof Symbol !== \\"undefined\\" && obj.constructor === Symbol ? \\"symbol\\" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === \\"function\\") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var _obj;
defineMessage((_obj = {
    id: \\"template\\",
    defaultMessage: \\"should remove newline and extra spaces\\"
}, _defineProperty(_obj, \\"id\\", \\"template\\"), _defineProperty(_obj, \\"defaultMessage\\", \\"should remove\\\\n    newline and\\\\n    extra spaces\\"), _obj));
var Foo = /*#__PURE__*/ function(Component1) {
    \\"use strict\\";
    _inherits(Foo, Component1);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    _createClass(Foo, [
        {
            key: \\"render\\",
            value: function render() {
                return(/*#__PURE__*/ React.createElement(FormattedMessage, {
                    id: \\"foo.bar.baz\\",
                    defaultMessage: \\"Hello World!\\"
                }));
            }
        }
    ]);
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": Array [
    Object {
      "defaultMessage": "should remove newline and extra spaces",
      "id": "template",
    },
    Object {
      "defaultMessage": "Hello World!",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
  ],
}
`;
