// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`emit asserts for [special] extractSourceLocation 1`] = `
"function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { FormattedMessage } from "react-intl";
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo.bar.baz",
            defaultMessage: "Hello World!"
        });
    };
    return Foo;
}(Component);
export { Foo as default };
"
`;

exports[`emit asserts for [special] extractSourceLocation 2`] = `
{
  "defaultMessage": "Hello World!",
  "end": Any<Number>,
  "file": StringContaining "extractSourceLocation.tsx",
  "id": "foo.bar.baz",
  "start": Any<Number>,
}
`;

exports[`emit asserts for FormattedMessage 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { FormattedMessage } from "react-intl";
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement("p", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo.bar.baz",
            defaultMessage: "Hello World! {foo, number}",
            values: {
                foo: 1
            }
        }), /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo.bar.baz",
            defaultMessage: "Hello World! {foo, number}",
            values: {
                foo: 1
            }
        }), /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo.bar.baz",
            defaultMessage: "Hello World! {foo, number}",
            values: {
                foo: 1
            }
        }));
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    {
      "defaultMessage": "Hello World! {foo, number}",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
  ],
}
`;

exports[`emit asserts for additionalComponentNames 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
function CustomMessage() {}
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement(CustomMessage, {
            id: "greeting-world",
            defaultMessage: "Hello World!"
        });
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for additionalFunctionNames 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
function CustomMessage() {}
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement(CustomMessage, {
            id: formatMessage({
                id: "rL0Y20zC+F",
                defaultMessage: "foo"
            }),
            description: $formatMessage({
                id: "rL0Y20zC+F",
                defaultMessage: "foo"
            }),
            defaultMessage: "Hello World!"
        });
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "foo",
      "id": "rL0Y20zC+F",
    },
    {
      "defaultMessage": "foo",
      "id": "rL0Y20zC+F",
    },
  ],
}
`;

exports[`emit asserts for defineMessages 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { defineMessages, FormattedMessage } from "react-intl";
var msgs = defineMessages({
    header: {
        id: "foo.bar.baz",
        defaultMessage: "Hello World!"
    },
    content: {
        id: "foo.bar.biff",
        defaultMessage: "Hello Nurse!"
    },
    kittens: {
        id: "app.home.kittens",
        defaultMessage: "{count, plural, =0 {\\uD83D\\uDE2D} one {# kitten} other {# kittens}}"
    },
    trailingWhitespace: {
        id: "trailing.ws",
        defaultMessage: "Some whitespace"
    },
    escaped: {
        id: "escaped.apostrophe",
        defaultMessage: "A quoted value ''{value}'"
    },
    quoted: {
        id: "escaped.apostrophe",
        defaultMessage: "What's going on"
    },
    newline: {
        id: "newline",
        defaultMessage: "this is a message"
    }
});
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement("div", null, /*#__PURE__*/ React.createElement("h1", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.header))), /*#__PURE__*/ React.createElement("p", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.content))), /*#__PURE__*/ React.createElement("p", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.kittens)), /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "inline",
            defaultMessage: "formatted message"
        })));
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    {
      "defaultMessage": "{count, plural, =0 {😭} one {# kitten} other {# kittens}}",
      "description": "Counts kittens",
      "id": "app.home.kittens",
    },
    {
      "defaultMessage": "Some whitespace",
      "description": "Whitespace",
      "id": "trailing.ws",
    },
    {
      "defaultMessage": "A quoted value ''{value}'",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    {
      "defaultMessage": "What's going on",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    {
      "defaultMessage": "this is a message",
      "description": "this is     a     description",
      "id": "newline",
    },
    {
      "defaultMessage": "formatted message",
      "description": "foo",
      "id": "inline",
    },
  ],
}
`;

exports[`emit asserts for defineMessagesPreserveWhitespace 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { defineMessages, FormattedMessage } from "react-intl";
var msgs = defineMessages({
    header: {
        id: "foo.bar.baz",
        defaultMessage: "Hello World!"
    },
    content: {
        id: "foo.bar.biff",
        defaultMessage: "Hello Nurse!"
    },
    kittens: {
        id: "app.home.kittens",
        defaultMessage: "{count, plural, =0 {\\uD83D\\uDE2D} one {# kitten} other {# kittens}}"
    },
    trailingWhitespace: {
        id: "trailing.ws",
        defaultMessage: "   Some whitespace   "
    },
    escaped: {
        id: "escaped.apostrophe",
        defaultMessage: "A quoted value ''{value}'"
    },
    quoted: {
        id: "escaped.apostrophe",
        defaultMessage: "What's going on"
    },
    newline: {
        id: "newline",
        defaultMessage: "this is     a message"
    },
    linebreak: {
        id: "linebreak",
        defaultMessage: "this is\\na message"
    },
    templateLinebreak: {
        id: "templateLinebreak",
        defaultMessage: "this is\\n    a message"
    }
});
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement("div", null, /*#__PURE__*/ React.createElement("h1", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.header))), /*#__PURE__*/ React.createElement("p", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.content))), /*#__PURE__*/ React.createElement("p", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.kittens)), /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "inline",
            defaultMessage: "formatted message"
        }), /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "inline.linebreak",
            defaultMessage: "formatted message with linebreak"
        })));
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    {
      "defaultMessage": "{count, plural, =0 {😭} one {# kitten} other {# kittens}}",
      "description": "Counts kittens",
      "id": "app.home.kittens",
    },
    {
      "defaultMessage": "   Some whitespace   ",
      "description": "Whitespace",
      "id": "trailing.ws",
    },
    {
      "defaultMessage": "A quoted value ''{value}'",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    {
      "defaultMessage": "What's going on",
      "description": "Escaped apostrophe",
      "id": "escaped.apostrophe",
    },
    {
      "defaultMessage": "this is     a message",
      "description": "this is     a     description",
      "id": "newline",
    },
    {
      "defaultMessage": "this is
a message",
      "description": "this is
a
description",
      "id": "linebreak",
    },
    {
      "defaultMessage": "this is
    a message",
      "description": "this is
    a
    description",
      "id": "templateLinebreak",
    },
    {
      "defaultMessage": "formatted message",
      "description": "foo",
      "id": "inline",
    },
    {
      "defaultMessage": "formatted message
						with linebreak",
      "description": "foo
						bar",
      "id": "inline.linebreak",
    },
  ],
}
`;

exports[`emit asserts for descriptionsAsObjects 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { FormattedMessage } from "react-intl";
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo.bar.baz",
            defaultMessage: "Hello World!"
        });
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator.",
      },
      "id": "foo.bar.baz",
    },
  ],
}
`;

exports[`emit asserts for extractFromFormatMessage 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { injectIntl, FormattedMessage } from "react-intl";
var objectPointer = {
    id: "foo.bar.invalid",
    defaultMessage: "This cannot be extracted",
    description: "the plugin only supports inline objects"
};
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        var intl = this.props.intl;
        var msgs = {
            baz: this.props.intl.formatMessage({
                id: "foo.bar.baz",
                defaultMessage: "Hello World!"
            }),
            biff: intl.formatMessage({
                id: "foo.bar.biff",
                defaultMessage: "Hello Nurse!"
            }),
            invalid: this.props.intl.formatMessage(objectPointer),
            invalid2: this.props.intl.formatMessage({
                id: id,
                defaultMessage: defaultMessage,
                description: "asd"
            })
        };
        return /*#__PURE__*/ React.createElement("div", null, /*#__PURE__*/ React.createElement("h1", null, msgs.header), /*#__PURE__*/ React.createElement("p", null, msgs.content), /*#__PURE__*/ React.createElement("input", {
            placeholder: intl.formatMessage({
                id: "A/2tFVt1SI",
                defaultMessage: "inline"
            })
        }), /*#__PURE__*/ React.createElement("span", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo",
            defaultMessage: "bar"
        })));
    };
    return Foo;
}(Component);
export default injectIntl(Foo);
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    {
      "defaultMessage": "inline",
      "id": "A/2tFVt1SI",
    },
    {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for extractFromFormatMessageStateless 1`] = `
{
  "code": "import { FormattedMessage, injectIntl, useIntl } from "react-intl";
import React from "react";
function myFunction(param1, param) {
    var formatMessage = param.formatMessage, formatDate = param.formatDate;
    return formatMessage({
        id: "inline1",
        defaultMessage: "Hello params!"
    }) + formatDate(new Date());
}
var child = myFunction(filterable, intl);
function SFC() {
    var formatMessage = useIntl().formatMessage;
    return formatMessage({
        id: "hook",
        defaultMessage: "hook"
    });
}
var Foo = function(param) {
    var formatMessage = param.intl.formatMessage;
    var msgs = {
        qux: formatMessage({
            id: "foo.bar.quux",
            defaultMessage: "Hello Stateless!"
        })
    };
    return /*#__PURE__*/ React.createElement("div", null, /*#__PURE__*/ React.createElement("h1", null, msgs.header), /*#__PURE__*/ React.createElement("p", null, msgs.content), /*#__PURE__*/ React.createElement("span", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
        id: "foo",
        defaultMessage: "bar"
    })));
};
export default injectIntl(Foo);
",
  "msgs": [
    {
      "defaultMessage": "Hello params!",
      "description": "A stateless message",
      "id": "inline1",
    },
    {
      "defaultMessage": "hook",
      "description": "hook",
      "id": "hook",
    },
    {
      "defaultMessage": "Hello Stateless!",
      "description": "A stateless message",
      "id": "foo.bar.quux",
    },
    {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for formatMessageCall 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { injectIntl, FormattedMessage } from "react-intl";
var objectPointer = {
    id: "foo.bar.invalid",
    defaultMessage: "This cannot be extracted",
    description: "the plugin only supports inline objects"
};
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        var msgs = {
            baz: formatMessage({
                id: "foo.bar.baz",
                defaultMessage: "Hello World!"
            }),
            baz2: this.props.intl.$formatMessage({
                id: "foo.bar.baz2",
                defaultMessage: "Hello World!"
            }),
            biff: $formatMessage({
                id: "foo.bar.biff",
                defaultMessage: "Hello Nurse!"
            }),
            invalid: this.props.intl.formatMessage(objectPointer)
        };
        return /*#__PURE__*/ React.createElement("div", null, /*#__PURE__*/ React.createElement("h1", null, msgs.header), /*#__PURE__*/ React.createElement("p", null, msgs.content), /*#__PURE__*/ React.createElement("input", {
            placeholder: intl.formatMessage({
                id: "A/2tFVt1SI",
                defaultMessage: "inline"
            })
        }), /*#__PURE__*/ React.createElement("span", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo",
            defaultMessage: "bar"
        })));
    };
    return Foo;
}(Component);
export default injectIntl(Foo);
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "foo.bar.baz",
    },
    {
      "defaultMessage": "Hello World!",
      "description": "The default message $$$",
      "id": "foo.bar.baz2",
    },
    {
      "defaultMessage": "Hello Nurse!",
      "description": "Another message",
      "id": "foo.bar.biff",
    },
    {
      "defaultMessage": "inline",
      "id": "A/2tFVt1SI",
    },
    {
      "defaultMessage": "bar",
      "description": "baz",
      "id": "foo",
    },
  ],
}
`;

exports[`emit asserts for inline 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { FormattedMessage, defineMessage } from "react-intl";
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement("div", null, /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo.bar.baz",
            defaultMessage: "Hello World!"
        }), defineMessage({
            id: "header",
            defaultMessage: "Hello World!"
        }), defineMessage({
            id: "header2",
            defaultMessage: "Hello World!"
        }));
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
    {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "header",
    },
    {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "header2",
    },
  ],
}
`;

exports[`emit asserts for nested 1`] = `
{
  "code": "intl.formatMessage({
    id: "HELLO..13.undefined",
    defaultMessage: "layer1 {name}"
}, {
    name: intl.formatMessage({
        defaultMessage: "layer2"
    })
});
",
  "msgs": [
    {
      "defaultMessage": "layer1 {name}",
      "id": "HELLO..13.undefined",
    },
  ],
}
`;

exports[`emit asserts for noImport 1`] = `
{
  "code": "export function foo() {
    props.intl.formatMessage({
        id: "hYpBl",
        defaultMessage: "props {intl}"
    }, {
        bar: "bar"
    });
    this.props.intl.formatMessage({
        id: "tBZlS",
        defaultMessage: "this props {intl}"
    }, {
        bar: "bar"
    });
    return intl.formatMessage({
        id: "ALfyd",
        defaultMessage: "foo {bar}"
    }, {
        bar: "bar"
    });
}
",
  "msgs": [
    {
      "defaultMessage": "props {intl}",
      "description": "bar",
      "id": "hYpBl",
    },
    {
      "defaultMessage": "this props {intl}",
      "description": "bar",
      "id": "tBZlS",
    },
    {
      "defaultMessage": "foo {bar}",
      "description": "bar",
      "id": "ALfyd",
    },
  ],
}
`;

exports[`emit asserts for overrideIdFn 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { defineMessages, FormattedMessage, defineMessage } from "react-intl";
var msgs = defineMessages({
    header: {
        id: "HELLO.foo.bar.baz.12.string",
        defaultMessage: "Hello World!"
    },
    content: {
        id: "HELLO.foo.bar.biff.12.object",
        defaultMessage: "Hello Nurse!"
    }
});
defineMessage({
    id: "HELLO..13.string",
    defaultMessage: "defineMessage"
});
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        var intl = this.props.intl;
        var formatMessage = intl.formatMessage;
        this.props.intl.formatMessage({
            id: "HELLO..5.string",
            defaultMessage: "no-id"
        });
        intl.formatMessage({
            id: "HELLO..18.string",
            defaultMessage: "intl.formatMessage"
        });
        formatMessage({
            id: "HELLO..13.string",
            defaultMessage: "formatMessage"
        });
        return /*#__PURE__*/ React.createElement("div", null, /*#__PURE__*/ React.createElement("h1", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.header))), /*#__PURE__*/ React.createElement("p", null, /*#__PURE__*/ React.createElement(FormattedMessage, _extends({}, msgs.content))), /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "HELLO.foo.bar.zoo.18.object",
            defaultMessage: "Hello World! {abc}",
            values: {
                abc: 2
            }
        }), /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "HELLO..18.object",
            defaultMessage: "Hello World! {abc}",
            values: {
                abc: 2
            }
        }));
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello World!",
      "description": "The default message",
      "id": "HELLO.foo.bar.baz.12.string",
    },
    {
      "defaultMessage": "Hello Nurse!",
      "description": {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator.",
      },
      "id": "HELLO.foo.bar.biff.12.object",
    },
    {
      "defaultMessage": "defineMessage",
      "description": "foo",
      "id": "HELLO..13.string",
    },
    {
      "defaultMessage": "no-id",
      "description": "no-id",
      "id": "HELLO..5.string",
    },
    {
      "defaultMessage": "intl.formatMessage",
      "description": "no-id",
      "id": "HELLO..18.string",
    },
    {
      "defaultMessage": "formatMessage",
      "description": "no-id",
      "id": "HELLO..13.string",
    },
    {
      "defaultMessage": "Hello World! {abc}",
      "description": {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator. Another description",
      },
      "id": "HELLO.foo.bar.zoo.18.object",
    },
    {
      "defaultMessage": "Hello World! {abc}",
      "description": {
        "metadata": "Additional metadata content.",
        "text": "Something for the translator. Another description",
      },
      "id": "HELLO..18.object",
    },
  ],
}
`;

exports[`emit asserts for removeDefaultMessage 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { defineMessages, FormattedMessage } from "react-intl";
var messages = defineMessages({
    foo: {
        id: "greeting-user"
    }
});
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "greeting-world"
        });
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello, {name}",
      "description": "Greeting the user",
      "id": "greeting-user",
    },
    {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for removeDescription 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { defineMessages, FormattedMessage } from "react-intl";
var messages = defineMessages({
    foo: {
        id: "greeting-user",
        defaultMessage: "Hello, {name}"
    }
});
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "greeting-world",
            defaultMessage: "Hello World!"
        });
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "Hello, {name}",
      "description": "Greeting the user",
      "id": "greeting-user",
    },
    {
      "defaultMessage": "Hello World!",
      "description": "Greeting to the world",
      "id": "greeting-world",
    },
  ],
}
`;

exports[`emit asserts for templateLiteral 1`] = `
{
  "code": "function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
import React, { Component } from "react";
import { FormattedMessage, defineMessage } from "react-intl";
defineMessage({
    id: "template",
    defaultMessage: "should remove newline and extra spaces"
});
var Foo = /*#__PURE__*/ function(Component) {
    "use strict";
    _inherits(Foo, Component);
    var _super = _createSuper(Foo);
    function Foo() {
        _classCallCheck(this, Foo);
        return _super.apply(this, arguments);
    }
    var _proto = Foo.prototype;
    _proto.render = function render() {
        return /*#__PURE__*/ React.createElement(FormattedMessage, {
            id: "foo.bar.baz",
            defaultMessage: "Hello World!"
        });
    };
    return Foo;
}(Component);
export { Foo as default };
",
  "msgs": [
    {
      "defaultMessage": "should remove newline and extra spaces",
      "id": "template",
    },
    {
      "defaultMessage": "Hello World!",
      "description": "The default message.",
      "id": "foo.bar.baz",
    },
  ],
}
`;
